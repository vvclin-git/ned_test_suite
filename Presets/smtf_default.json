{"se_paras": {"Edge Angle": {"value": 5, "type": "value", "regex": "r'^[-]*[1-9]\\d*$'", "parser": "int(val)", "options": null}, "Pattern Size": {"value": 80, "type": "value", "regex": "r'^[1-9]\\d*$'", "parser": "int(val)", "options": null}, "Line Type": {"value": "cv2.LINE_8", "type": "list", "regex": "r'^cv2?[.]'", "parser": "eval(val)", "options": ["cv2.LINE_4", "cv2.LINE_8", "cv2.LINE_AA"]}, "Reverse": {"value": "True", "type": "list", "regex": "r'^True$|^False$'", "parser": "eval(val)", "options": ["True", "False"]}, "Extract Method": {"value": "cv2.TM_CCOEFF_NORMED", "type": "list", "regex": "r'^cv2?[.]'", "parser": "eval(val)", "options": ["cv2.TM_CCOEFF", "cv2.TM_CCOEFF_NORMED", "cv2.TM_CCORR", "cv2.TM_CCORR_NORMED", "cv2.TM_SQDIFF", "cv2.TM_SQDIFF_NORMED"]}, "Threshold": {"value": 0.95, "type": "value", "regex": "r'^\\d+[.]\\d+$'", "parser": "float(val)", "options": null}, "IoU Threshold": {"value": 0.01, "type": "value", "regex": "r'^\\d+[.]\\d+$'", "parser": "float(val)", "options": null}}, "mtf_paras": {"Sensor Pixel Size (\u00b5m)": {"value": "1.85", "type": "value", "regex": "r'^\\d+[.]\\d+$'", "parser": "float(val)", "options": null}, "Threshold": {"value": "0.55", "type": "value", "regex": "r'^\\d+[.]\\d+$'", "parser": "float(val)", "options": null}, "MTF Contrast (10-90)": {"value": "30", "type": "value", "regex": "r'^[1-9]\\d*$'", "parser": "int(val)", "options": null}}, "output_paras": {"FoV Anchor": {"value": "124,66", "type": "value", "regex": "r'^[-]*[1-9]\\d*$'", "parser": "int(val)", "options": null}, "FoV Dimension": {"value": "1950x1116", "type": "value", "regex": "r'^\\d+x\\d+$'", "parser": "(int(val.split('x')[0]), int(val.split('x')[1]))", "options": null}, "Grid Dimension": {"value": "32x18", "type": "value", "regex": "r'^\\d+x\\d+$'", "parser": "(int(val.split('x')[0]), int(val.split('x')[1]))", "options": null}, "Mesh Resolution": {"value": "64x36", "type": "value", "regex": "r'^\\d+x\\d+$'", "parser": "(int(val.split('x')[0]), int(val.split('x')[1]))", "options": null}, "Interpolation": {"value": "linear", "type": "list", "regex": "r'.+'", "parser": "str(val)", "options": ["linear", "nearest", "cubic"]}}}